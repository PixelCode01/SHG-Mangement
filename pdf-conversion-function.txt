  // PDF to Excel conversion functionality
  const handlePDFToExcelConversion = useCallback(async (file: File) => {
    console.log(`üîÑ Starting PDF to Excel conversion: ${file.name}`);
    setIsConvertingPDF(true);
    setPDFConversionStatus('Converting PDF to Excel format...');
    
    try {
      const formData = new FormData();
      formData.append('file', file);
      
      console.log('üì§ Sending PDF to conversion endpoint...');
      const response = await fetch('/api/pdf-to-excel', {
        method: 'POST',
        body: formData,
      });
      
      if (!response.ok) {
        throw new Error(`Conversion failed: ${response.status} ${response.statusText}`);
      }
      
      console.log('‚úÖ Conversion successful, downloading Excel file...');
      setPDFConversionStatus('Conversion successful! Downloading Excel file...');
      
      // Create download link
      const blob = await response.blob();
      const url = window.URL.createObjectURL(blob);
      const link = document.createElement('a');
      link.href = url;
      link.download = `members_converted_${Date.now()}.xlsx`;
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      window.URL.revokeObjectURL(url);
      
      setPDFConversionStatus('Excel file downloaded! You can now upload the Excel file above.');
      console.log('üéâ PDF to Excel conversion completed successfully');
      
    } catch (error) {
      console.error('‚ùå PDF to Excel conversion failed:', error);
      setPDFConversionStatus(`Conversion failed: ${error instanceof Error ? error.message : 'Unknown error'}`);
    } finally {
      setIsConvertingPDF(false);
    }
  }, []);
